import{_ as s,c as a,o as e,a as n}from"./app.1478ba28.js";const h=JSON.parse('{"title":"Deploying a Static Site","description":"","frontmatter":{},"headers":[{"level":2,"title":"Building The App","slug":"building-the-app"},{"level":3,"title":"Testing The App Locally","slug":"testing-the-app-locally"},{"level":2,"title":"GitHub Pages","slug":"github-pages"},{"level":3,"title":"GitHub Pages and Travis CI","slug":"github-pages-and-travis-ci"},{"level":2,"title":"GitLab Pages and GitLab CI","slug":"gitlab-pages-and-gitlab-ci"},{"level":2,"title":"Netlify","slug":"netlify"},{"level":2,"title":"Cloudflare Pages","slug":"cloudflare-pages"},{"level":3,"title":"Cloudflare Pages via Wrangler","slug":"cloudflare-pages-via-wrangler"},{"level":3,"title":"Cloudflare Pages with Git","slug":"cloudflare-pages-with-git"},{"level":2,"title":"Google Firebase","slug":"google-firebase"},{"level":2,"title":"Surge","slug":"surge"},{"level":2,"title":"Heroku","slug":"heroku"},{"level":2,"title":"Vercel","slug":"vercel"},{"level":3,"title":"Vercel CLI","slug":"vercel-cli"},{"level":3,"title":"Vercel for Git","slug":"vercel-for-git"},{"level":2,"title":"Azure Static Web Apps","slug":"azure-static-web-apps"}],"relativePath":"guide/static-deploy.md"}'),l={name:"guide/static-deploy.md"},o=n(`<h1 id="deploying-a-static-site" tabindex="-1">Deploying a Static Site <a class="header-anchor" href="#deploying-a-static-site" aria-hidden="true">#</a></h1><p>The following guides are based on some shared assumptions:</p><ul><li>You are using the default build output location (<code>dist</code>). This location <a href="/config/build-options.html#build-outdir">can be changed using <code>build.outDir</code></a>, and you can extrapolate instructions from these guides in that case.</li><li>You are using npm. You can use equivalent commands to run the scripts if you are using Yarn or other package managers.</li><li>Vite is installed as a local dev dependency in your project, and you have setup the following npm scripts:</li></ul><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite preview</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>It is important to note that <code>vite preview</code> is intended for previewing the build locally and not meant as a production server.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>These guides provide instructions for performing a static deployment of your Vite site. Vite also has experimental support for Server Side Rendering. SSR refers to front-end frameworks that support running the same application in Node.js, pre-rendering it to HTML, and finally hydrating it on the client. Check out the <a href="./ssr.html">SSR Guide</a> to learn about this feature. On the other hand, if you are looking for integration with traditional server-side frameworks, check out the <a href="./backend-integration.html">Backend Integration guide</a> instead.</p></div><h2 id="building-the-app" tabindex="-1">Building The App <a class="header-anchor" href="#building-the-app" aria-hidden="true">#</a></h2><p>You may run <code>npm run build</code> command to build the app.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run build</span></span>
<span class="line"></span></code></pre></div><p>By default, the build output will be placed at <code>dist</code>. You may deploy this <code>dist</code> folder to any of your preferred platforms.</p><h3 id="testing-the-app-locally" tabindex="-1">Testing The App Locally <a class="header-anchor" href="#testing-the-app-locally" aria-hidden="true">#</a></h3><p>Once you&#39;ve built the app, you may test it locally by running <code>npm run preview</code> command.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npm run preview</span></span>
<span class="line"></span></code></pre></div><p>The <code>vite preview</code> command will boot up local static web server that serves the files from <code>dist</code> at <code>http://localhost:4173</code>. It&#39;s an easy way to check if the production build looks OK in your local environment.</p><p>You may configure the port of the server by passing <code>--port</code> flag as an argument.</p><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite preview --port 8080</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Now the <code>preview</code> method will launch the server at <code>http://localhost:8080</code>.</p><h2 id="github-pages" tabindex="-1">GitHub Pages <a class="header-anchor" href="#github-pages" aria-hidden="true">#</a></h2><ol><li><p>Set the correct <code>base</code> in <code>vite.config.js</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME&gt;.github.io/</code>, you can omit <code>base</code> as it defaults to <code>&#39;/&#39;</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>, for example your repository is at <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>, then set <code>base</code> to <code>&#39;/&lt;REPO&gt;/&#39;</code>.</p></li><li><p>Inside your project, create <code>deploy.sh</code> with the following content (with highlighted lines uncommented appropriately), and run it to deploy:</p><div class="language-bash"><span class="copy"></span><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><div class="highlighted">\xA0</div><br><br><br><br></div><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># abort on errors</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> -e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># build</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># navigate into the build output directory</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># if you are deploying to a custom domain</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># echo &#39;www.example.com&#39; &gt; CNAME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">git init</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout -b main</span></span>
<span class="line"><span style="color:#A6ACCD;">git add -A</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit -m </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># if you are deploying to https://&lt;USERNAME&gt;.github.io</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># if you are deploying to https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git main:gh-pages</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> -</span></span>
<span class="line"></span></code></pre></div></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also run the above script in your CI setup to enable automatic deployment on each push.</p></div><h3 id="github-pages-and-travis-ci" tabindex="-1">GitHub Pages and Travis CI <a class="header-anchor" href="#github-pages-and-travis-ci" aria-hidden="true">#</a></h3><ol><li><p>Set the correct <code>base</code> in <code>vite.config.js</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME or GROUP&gt;.github.io/</code>, you can omit <code>base</code> as it defaults to <code>&#39;/&#39;</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME or GROUP&gt;.github.io/&lt;REPO&gt;/</code>, for example your repository is at <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>, then set <code>base</code> to <code>&#39;/&lt;REPO&gt;/&#39;</code>.</p></li><li><p>Create a file named <code>.travis.yml</code> in the root of your project.</p></li><li><p>Run <code>npm install</code> locally and commit the generated lockfile (<code>package-lock.json</code>).</p></li><li><p>Use the GitHub Pages deploy provider template, and follow the <a href="https://docs.travis-ci.com/user/deployment/pages/" target="_blank" rel="noopener noreferrer">Travis CI documentation</a>.</p><div class="language-yaml"><span class="copy"></span><pre><code><span class="line"><span style="color:#F07178;">language</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node_js</span></span>
<span class="line"><span style="color:#F07178;">node_js</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lts/*</span></span>
<span class="line"><span style="color:#F07178;">install</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm ci</span></span>
<span class="line"><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm run build</span></span>
<span class="line"><span style="color:#F07178;">deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pages</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">skip_cleanup</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">local_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># A token generated on GitHub allowing Travis to push code on you repository.</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># Set in the Travis settings page of your repository, as a secure variable.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">github_token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">$GITHUB_TOKEN</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">keep_history</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="gitlab-pages-and-gitlab-ci" tabindex="-1">GitLab Pages and GitLab CI <a class="header-anchor" href="#gitlab-pages-and-gitlab-ci" aria-hidden="true">#</a></h2><ol><li><p>Set the correct <code>base</code> in <code>vite.config.js</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME or GROUP&gt;.gitlab.io/</code>, you can omit <code>base</code> as it defaults to <code>&#39;/&#39;</code>.</p><p>If you are deploying to <code>https://&lt;USERNAME or GROUP&gt;.gitlab.io/&lt;REPO&gt;/</code>, for example your repository is at <code>https://gitlab.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>, then set <code>base</code> to <code>&#39;/&lt;REPO&gt;/&#39;</code>.</p></li><li><p>Create a file called <code>.gitlab-ci.yml</code> in the root of your project with the content below. This will build and deploy your site whenever you make changes to your content:</p><div class="language-yaml"><span class="copy"></span><pre><code><span class="line"><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node:16.5.0</span></span>
<span class="line"><span style="color:#F07178;">pages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stage</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">cache</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">files</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package-lock.json</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node_modules/</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm install</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm run build</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp -a dist/. public/</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">artifacts</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">public</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">if</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="netlify" tabindex="-1">Netlify <a class="header-anchor" href="#netlify" aria-hidden="true">#</a></h2><ol><li>Install the <a href="https://cli.netlify.com/" target="_blank" rel="noopener noreferrer">Netlify CLI</a>.</li><li>Create a new site using <code>ntl init</code>.</li><li>Deploy using <code>ntl deploy</code>.</li></ol><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install the Netlify CLI</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npm install -g netlify-cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create a new site in Netlify</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ntl init</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Deploy to a unique preview URL</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ntl deploy</span></span>
<span class="line"></span></code></pre></div><p>The Netlify CLI will share with you a preview URL to inspect. When you are ready to go into production, use the <code>prod</code> flag:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Deploy the site into production</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ntl deploy --prod</span></span>
<span class="line"></span></code></pre></div><h2 id="cloudflare-pages" tabindex="-1">Cloudflare Pages <a class="header-anchor" href="#cloudflare-pages" aria-hidden="true">#</a></h2><h3 id="cloudflare-pages-via-wrangler" tabindex="-1">Cloudflare Pages via Wrangler <a class="header-anchor" href="#cloudflare-pages-via-wrangler" aria-hidden="true">#</a></h3><ol><li>Install <a href="https://developers.cloudflare.com/workers/wrangler/get-started/" target="_blank" rel="noopener noreferrer">Wrangler CLI</a>.</li><li>Authenticate Wrangler with your Cloudflare account using <code>wrangler login</code>.</li><li>Run your build command.</li><li>Deploy using <code>npx wrangler pages publish dist</code>.</li></ol><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install Wrangler CLI</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npm install -g wrangler</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Login to Cloudflare account from CLI</span></span>
<span class="line"><span style="color:#A6ACCD;">$ wrangler login</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Run your build command</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create new deployment</span></span>
<span class="line"><span style="color:#A6ACCD;">$ npx wrangler pages publish dist</span></span>
<span class="line"></span></code></pre></div><p>After your assets are uploaded, Wrangler will give you a preview URL to inspect your site. When you log into the Cloudflare Pages dashboard, you will see your new project.</p><h3 id="cloudflare-pages-with-git" tabindex="-1">Cloudflare Pages with Git <a class="header-anchor" href="#cloudflare-pages-with-git" aria-hidden="true">#</a></h3><ol><li>Push your code to your git repository (GitHub, GitLab).</li><li>Log in to the Cloudflare dashboard and select your account in <strong>Account Home</strong> &gt; <strong>Pages</strong>.</li><li>Select <strong>Create a new Project</strong> and the <strong>Connect Git</strong> option.</li><li>Select the git project you want to deploy and click <strong>Begin setup</strong></li><li>Select the corresponding framework preset in the build setting depending on the Vite framework you have selected.</li><li>Then save and deploy!</li><li>Your application is deployed! (e.g <code>https://&lt;PROJECTNAME&gt;.pages.dev/</code>)</li></ol><p>After your project has been imported and deployed, all subsequent pushes to branches will generate <a href="https://developers.cloudflare.com/pages/platform/preview-deployments/" target="_blank" rel="noopener noreferrer">Preview Deployments</a> unless specified not to in your <a href="https://developers.cloudflare.com/pages/platform/branch-build-controls/" target="_blank" rel="noopener noreferrer">branch build controls</a>. All changes to the Production Branch (commonly \u201Cmain\u201D) will result in a Production Deployment.</p><p>You can also add custom domains and handle custom build settings on Pages. Learn more about <a href="https://developers.cloudflare.com/pages/get-started/#manage-your-site" target="_blank" rel="noopener noreferrer">Cloudflare Pages Git Integration</a>.</p><h2 id="google-firebase" tabindex="-1">Google Firebase <a class="header-anchor" href="#google-firebase" aria-hidden="true">#</a></h2><ol><li><p>Make sure you have <a href="https://www.npmjs.com/package/firebase-tools" target="_blank" rel="noopener noreferrer">firebase-tools</a> installed.</p></li><li><p>Create <code>firebase.json</code> and <code>.firebaserc</code> at the root of your project with the following content:</p><p><code>firebase.json</code>:</p><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">hosting</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">public</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">ignore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">rewrites</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">source</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">destination</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/index.html</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>.firebaserc</code>:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">projects</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;YOUR_FIREBASE_ID&gt;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>After running <code>npm run build</code>, deploy using the command <code>firebase deploy</code>.</p></li></ol><h2 id="surge" tabindex="-1">Surge <a class="header-anchor" href="#surge" aria-hidden="true">#</a></h2><ol><li><p>First install <a href="https://www.npmjs.com/package/surge" target="_blank" rel="noopener noreferrer">surge</a>, if you haven\u2019t already.</p></li><li><p>Run <code>npm run build</code>.</p></li><li><p>Deploy to surge by typing <code>surge dist</code>.</p></li></ol><p>You can also deploy to a <a href="http://surge.sh/help/adding-a-custom-domain" target="_blank" rel="noopener noreferrer">custom domain</a> by adding <code>surge dist yourdomain.com</code>.</p><h2 id="heroku" tabindex="-1">Heroku <a class="header-anchor" href="#heroku" aria-hidden="true">#</a></h2><ol><li><p>Install <a href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noopener noreferrer">Heroku CLI</a>.</p></li><li><p>Create a Heroku account by <a href="https://signup.heroku.com" target="_blank" rel="noopener noreferrer">signing up</a>.</p></li><li><p>Run <code>heroku login</code> and fill in your Heroku credentials:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ heroku login</span></span>
<span class="line"></span></code></pre></div></li><li><p>Create a file called <code>static.json</code> in the root of your project with the below content:</p><p><code>static.json</code>:</p><div class="language-json"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./dist</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>This is the configuration of your site; read more at <a href="https://github.com/heroku/heroku-buildpack-static" target="_blank" rel="noopener noreferrer">heroku-buildpack-static</a>.</p></li><li><p>Set up your Heroku git remote:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># version change</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git init</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git add </span><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git commit -m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My site ready for deployment.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># creates a new app with a specified name</span></span>
<span class="line"><span style="color:#A6ACCD;">$ heroku apps:create example</span></span>
<span class="line"></span></code></pre></div></li><li><p>Set buildpacks. We use <code>heroku/nodejs</code> to build the project and <code>heroku-buildpack-static</code> to serve it.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># set buildpacks</span></span>
<span class="line"><span style="color:#A6ACCD;">$ heroku buildpacks:set heroku/nodejs</span></span>
<span class="line"><span style="color:#A6ACCD;">$ heroku buildpacks:add https://github.com/heroku/heroku-buildpack-static.git</span></span>
<span class="line"></span></code></pre></div></li><li><p>Deploy your site:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># publish site</span></span>
<span class="line"><span style="color:#A6ACCD;">$ git push heroku main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># opens a browser to view the Dashboard version of Heroku CI</span></span>
<span class="line"><span style="color:#A6ACCD;">$ heroku open</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="vercel" tabindex="-1">Vercel <a class="header-anchor" href="#vercel" aria-hidden="true">#</a></h2><h3 id="vercel-cli" tabindex="-1">Vercel CLI <a class="header-anchor" href="#vercel-cli" aria-hidden="true">#</a></h3><ol><li>Install the <a href="https://vercel.com/cli" target="_blank" rel="noopener noreferrer">Vercel CLI</a> and run <code>vercel</code> to deploy.</li><li>Vercel will detect that you are using Vite and will enable the correct settings for your deployment.</li><li>Your application is deployed! (e.g. <a href="https://vite-vue-template.vercel.app/" target="_blank" rel="noopener noreferrer">vite-vue-template.vercel.app</a>)</li></ol><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm i -g vercel</span></span>
<span class="line"><span style="color:#A6ACCD;">$ vercel init vite</span></span>
<span class="line"><span style="color:#A6ACCD;">Vercel CLI</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> Success</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> Initialized </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> example </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;">/your-folder.</span></span>
<span class="line"><span style="color:#A6ACCD;">- To deploy, </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">cd vite</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> and run </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">vercel</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">.</span></span>
<span class="line"></span></code></pre></div><h3 id="vercel-for-git" tabindex="-1">Vercel for Git <a class="header-anchor" href="#vercel-for-git" aria-hidden="true">#</a></h3><ol><li>Push your code to your git repository (GitHub, GitLab, Bitbucket).</li><li><a href="https://vercel.com/new" target="_blank" rel="noopener noreferrer">Import your Vite project</a> into Vercel.</li><li>Vercel will detect that you are using Vite and will enable the correct settings for your deployment.</li><li>Your application is deployed! (e.g. <a href="https://vite-vue-template.vercel.app/" target="_blank" rel="noopener noreferrer">vite-vue-template.vercel.app</a>)</li></ol><p>After your project has been imported and deployed, all subsequent pushes to branches will generate <a href="https://vercel.com/docs/concepts/deployments/environments#preview" target="_blank" rel="noopener noreferrer">Preview Deployments</a>, and all changes made to the Production Branch (commonly \u201Cmain\u201D) will result in a <a href="https://vercel.com/docs/concepts/deployments/environments#production" target="_blank" rel="noopener noreferrer">Production Deployment</a>.</p><p>Learn more about Vercel\u2019s <a href="https://vercel.com/docs/concepts/git" target="_blank" rel="noopener noreferrer">Git Integration</a>.</p><h2 id="azure-static-web-apps" tabindex="-1">Azure Static Web Apps <a class="header-anchor" href="#azure-static-web-apps" aria-hidden="true">#</a></h2><p>You can quickly deploy your Vite app with Microsoft Azure <a href="https://aka.ms/staticwebapps" target="_blank" rel="noopener noreferrer">Static Web Apps</a> service. You need:</p><ul><li>An Azure account and a subscription key. You can create a <a href="https://azure.microsoft.com/free" target="_blank" rel="noopener noreferrer">free Azure account here</a>.</li><li>Your app code pushed to <a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a>.</li><li>The <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps" target="_blank" rel="noopener noreferrer">SWA Extension</a> in <a href="https://code.visualstudio.com" target="_blank" rel="noopener noreferrer">Visual Studio Code</a>.</li></ul><p>Install the extension in VS Code and navigate to your app root. Open the Static Web Apps extension, sign in to Azure, and click the &#39;+&#39; sign to create a new Static Web App. You will be prompted to designate which subscription key to use.</p><p>Follow the wizard started by the extension to give your app a name, choose a framework preset, and designate the app root (usually <code>/</code>) and built file location <code>/dist</code>. The wizard will run and will create a GitHub action in your repo in a <code>.github</code> folder.</p><p>The action will work to deploy your app (watch its progress in your repo&#39;s Actions tab) and, when successfully completed, you can view your app in the address provided in the extension&#39;s progress window by clicking the &#39;Browse Website&#39; button that appears when the GitHub action has run.</p>`,59),p=[o];function t(r,c,i,d,y,u){return e(),a("div",null,p)}var g=s(l,[["render",t]]);export{h as __pageData,g as default};
