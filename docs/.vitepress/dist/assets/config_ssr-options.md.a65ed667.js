import{_ as e,c as r,o as t,a as s}from"./app.1478ba28.js";const f=JSON.parse('{"title":"SSR Options","description":"","frontmatter":{},"headers":[{"level":2,"title":"ssr.external","slug":"ssr-external"},{"level":2,"title":"ssr.noExternal","slug":"ssr-noexternal"},{"level":2,"title":"ssr.target","slug":"ssr-target"},{"level":2,"title":"ssr.format","slug":"ssr-format"}],"relativePath":"config/ssr-options.md"}'),a={name:"config/ssr-options.md"},n=s('<h1 id="ssr-options" tabindex="-1">SSR Options <a class="header-anchor" href="#ssr-options" aria-hidden="true">#</a></h1><ul><li><strong>Related:</strong> <a href="/guide/ssr.html#ssr-externals">SSR Externals</a></li></ul><div class="warning custom-block"><p class="custom-block-title">Experimental</p><p>SSR options may be adjusted in minor releases.</p></div><h2 id="ssr-external" tabindex="-1">ssr.external <a class="header-anchor" href="#ssr-external" aria-hidden="true">#</a></h2><ul><li><strong>Type:</strong> <code>string[]</code></li></ul><p>Force externalize dependencies for SSR.</p><h2 id="ssr-noexternal" tabindex="-1">ssr.noExternal <a class="header-anchor" href="#ssr-noexternal" aria-hidden="true">#</a></h2><ul><li><strong>Type:</strong> <code>string | RegExp | (string | RegExp)[] | true</code></li></ul><p>Prevent listed dependencies from being externalized for SSR. If <code>true</code>, no dependencies are externalized.</p><h2 id="ssr-target" tabindex="-1">ssr.target <a class="header-anchor" href="#ssr-target" aria-hidden="true">#</a></h2><ul><li><strong>Type:</strong> <code>&#39;node&#39; | &#39;webworker&#39;</code></li><li><strong>Default:</strong> <code>node</code></li></ul><p>Build target for the SSR server.</p><h2 id="ssr-format" tabindex="-1">ssr.format <a class="header-anchor" href="#ssr-format" aria-hidden="true">#</a></h2><ul><li><strong>Type:</strong> <code>&#39;esm&#39; | &#39;cjs&#39;</code></li><li><strong>Default:</strong> <code>esm</code></li><li><strong>Experimental</strong></li></ul><p>Build format for the SSR server. Since Vite v3 the SSR build generates ESM by default. <code>&#39;cjs&#39;</code> can be selected to generate a CJS build, but it isn&#39;t recommended. The option is left marked as experimental to give users more time to update to ESM. CJS builds requires complex externalization heuristics that aren&#39;t present in the ESM format.</p>',15),o=[n];function i(l,d,c,p,h,u){return t(),r("div",null,o)}var m=e(a,[["render",i]]);export{f as __pageData,m as default};
